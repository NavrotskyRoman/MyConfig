# This file has been auto-generated by i3-config-wizard(1).

set $mod Mod4

for_window [class="^.*"] border pixel 2 
gaps outer 5  

smart_borders on
#disable all gaps whenever only one container is on the current workspace
#smart_gaps inverse_outer  
exec_always --no-startup-id "setxkbmap -model pc105 -layout us,ru -option grp:alt_shift_toggle"
exec_always --no-startup-id  compton --config ~/.config/i3/compton.conf
#exec_always --no-startup-id feh --bg-scale ~/Images/Wallpaper/1.jpg
exec_always --no-startup-id feh --bg-scale ~/Images/Wallpaper/Neurons_2.gif
exec_always --no-startup-id ~/Wallpaper/wallpaper.sh 0.05 ~/Images/Wallpaper/Neurons_2.gif 

exec ~/scripts/todo_run.sh
exec ~/scripts/github.sh
exec nm-applet
exec --no-startup-id dunst -config ~/.config/dunst/dunstrc
#exec --no-startup-id $HOME/.config/polybar/polybar.sh

#exec killall -q notify-osd
#exec --no-startup-id dunst -config ~/.config/dunst/dunstrc

#bindsym $mod+x border pixel 2 gaps inner all set 0
#bindsym $mod+Shift+x border pixel 2 gaps inner all set 15
bindsym $mod+x gaps inner current plus 5
bindsym $mod+Shift+x gaps inner current minus 5
bindsym $mod++z gaps outer current set 0
bindsym $mod+Shift+z gaps inner current set 0
 
bindsym $mod+Return split h exec i3-sensible-terminal
bindsym $mod+Shift+Return split v exec i3-sensible-terminal 

bindsym Print exec gnome-screenshot 
bindsym $mod+Print exec gnome-screenshot -i

# Make the currently focused window a scratchpad
bindsym $mod+minus move scratchpad
# Show the first scratchpad window
bindsym $mod+Shift+minus scratchpad show floating toggle

#FastBindigs
bindsym $mod+mod1+1 exec qutebrowser/.venv/bin/python3 -m qutebrowser
bindsym $mod+mod1+2 exec /home/rodjer113/.Telegram/Telegram
bindsym $mod+mod1+3 exec gnome-terminal -x htop
bindsym $mod+mod1+4 exec gnome-terminal -x ranger
bindsym $mod+mod1+5 exec /home/rodjer113/Games/flashplayer
bindsym $mod+mod1+p exec smplayer
bindsym $mod+mod1+o exec xdg-open .
bindsym $mod+mod1+g exec peek 

#Reminder to me = Add to start myplaylist

#TODO binds
#bindsym $mod+mod1+8 exec x-terminal-emulator -e vim /home/rodjer113/MyFiles/1_Programming/Sites/TODO/index.html
bindsym $mod+mod1+9 exec gnome-terminal --working-directory=/home/rodjer113/MyFiles/1_Programming/Sites/TODO/todo/src
bindsym $mod+mod1+0 exec /home/rodjer113/MyFiles/1_Programming/Sites/TODO/nw
bindsym $mod+mod1+b exec gnome-terminal -x /home/rodjer113/scripts/github.sh

#Volume Binds
bindsym $mod+F12 exec pactl set-sink-volume 0 +5% 
bindsym $mod+F11 exec pactl set-sink-volume 0 -5% 
bindsym $mod+F10 exec pactl set-sink-volume 0 0% 
bindsym $mod+Shift+F10 exec pactl set-sink-volume 0 100% 

#Monitors
bindsym $mod+mod1+m exec xrandr --output VGA-1-1 --auto --left-of LVDS-1-1
bindsym $mod+mod1+Shift+m exec xrandr --auto && xrandr --output VGA-1-1 --off
bindsym $mod+Shift+s exec ~/.config/i3/i3-display-swap.sh
#Connect monitor left
#Disconnect monitor get it main

#Mouse Control

#bindsym $mod+mod1+u exec xdotool mousemove_relative --sync 0 0 click 4
#bindsym $mod+mod1+i exec xdotool mousemove_relative --sync 0 0 click 5

mode "mouse"{
  #MouseHotSqures
  #Top
  bindsym $mod+1 exec xdotool mousemove 227 128
  bindsym $mod+2 exec xdotool mousemove 681 128
  bindsym $mod+3 exec xdotool mousemove 1135 128

  #Middle
  bindsym $mod+Shift+1 exec xdotool mousemove 227 384
  bindsym $mod+Shift+2 exec xdotool mousemove 681 384
  bindsym $mod+Shift+3 exec xdotool mousemove 1135 384

  #Middle
  bindsym $mod+8 exec xdotool mousemove 227 640
  bindsym $mod+9 exec xdotool mousemove 681 640
  bindsym $mod+0 exec xdotool mousemove 1135 640
  bindsym $mod+Shift+8 exec xdotool mousemove 227 640
  bindsym $mod+Shift+9 exec xdotool mousemove 681 640
  bindsym $mod+Shift+0 exec xdotool mousemove 1135 640

  #Mod+Shift 
    set $slow 7
  #No Keys 
  	set $quick 35
  #MOD+Keys 
  	set $fast 125
  #Shift+Keys 
  	set $super_fast 80
  
  # Mouse movement (slow) -- vim keybindings
  bindsym $mod+Shift+h exec xdotool mousemove_relative -- -$slow 0
	bindsym $mod+Shift+j exec xdotool mousemove_relative 0 $slow
	bindsym $mod+Shift+k exec xdotool mousemove_relative -- 0 -$slow
	bindsym $mod+Shift+l exec xdotool mousemove_relative $slow 0


  # Mouse movement (quicker) -- vim keybindings
	bindsym h exec xdotool mousemove_relative -- -$quick 0
	bindsym j exec xdotool mousemove_relative 0 $quick
	bindsym k exec xdotool mousemove_relative -- 0 -$quick
	bindsym l exec xdotool mousemove_relative $quick 0

  
  # Mouse movement (fast) -- vim keybindings
	bindsym $mod+h exec xdotool mousemove_relative -- -$fast 0
	bindsym $mod+j exec xdotool mousemove_relative 0 $fast
	bindsym $mod+k exec xdotool mousemove_relative -- 0 -$fast
	bindsym $mod+l exec xdotool mousemove_relative $fast 0

  # Mouse movement (super-fast) -- vim keybindings
	bindsym Shift+h exec xdotool mousemove_relative -- -$super_fast 0
	bindsym Shift+j exec xdotool mousemove_relative 0 $super_fast
	bindsym Shift+k exec xdotool mousemove_relative -- 0 -$super_fast
	bindsym Shift+l exec xdotool mousemove_relative $super_fast 0

# Left Click
	bindsym f exec xdotool click 1

	# Middle Click
	bindsym d exec xdotool click 2

	# Right Click
	bindsym s exec xdotool click 3

	# Left Click-and-drag
	bindsym Shift+f exec xdotool mousedown 1

	# Middle Click-and-drag 
	bindsym Shift+d exec xdotool mousedown 2

	# Right Click-and-drag
	bindsym Shift+s exec xdotool mousedown 3

	# Left Drag release
	bindsym $mod+f exec xdotool mouseup 1

	# Middle Drag release
	bindsym $mod+d exec xdotool mouseup 2

	# Right Drag release
	bindsym $mod2+s exec xdotool mouseup 3
  
  # Mouse wheel
  bindsym $mod+i exec xdotool click 4
	bindsym $mod+u exec xdotool click 5
  bindsym i exec xdotool click 4
	bindsym u exec xdotool click 5

# return to normal keybindings -- IMPORTANT!!
	bindsym Escape mode "default"
	bindsym $mod+Escape mode "default"
	bindsym $mod+m mode "default"
}

bindsym $mod+m mode "mouse"



client.focused #00C1FF #00C1FF #000088 #00C1FF 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:DejaVu Sans Mono 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesnâ€™t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .deskop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935

bindsym $mod+d exec rofi -show run -show-icons -sidebar-mode -terminal i3-sensible-terminal -lines 5 -eh 2 -width 100 -padding 320 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd"

bindsym $mod+Shift+d exec rofi -show window -eh 2 -width 100 -padding 320 -opacity "85" -bw 0 -bc "$bg-color" -bg "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd"

# change focus
 bindsym $mod+h focus left
 bindsym $mod+j focus down
 bindsym $mod+k focus up
 bindsym $mod+l focus right
 
# # alternatively, you can use the cursor keys:
 bindsym $mod+Left focus left
 bindsym $mod+Down focus down
 bindsym $mod+Up focus up
 bindsym $mod+Right focus right

# # move focused window
 bindsym $mod+Shift+h move left
 bindsym $mod+Shift+j move down
 bindsym $mod+Shift+k move up
 bindsym $mod+Shift+l move right

# # alternatively, you can use the cursor keys:
 bindsym $mod+Shift+Left move left
 bindsym $mod+Shift+Down move down
 bindsym $mod+Shift+Up move up
 bindsym $mod+Shift+Right move right

# # split in horizontal orientation
 bindsym $mod+t split h

# # split in vertical orientation
 bindsym $mod+v split v

# # enter fullscreen mode for the focused container
 bindsym $mod+f fullscreen toggle
 
# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
bindsym $mod+y resize shrink width 5 px or 5 ppt
bindsym $mod+u resize grow height 5 px or 5 ppt
bindsym $mod+i resize shrink height 5 px or 5 ppt
bindsym $mod+o resize grow width 5 px or 5 ppt

mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
     i3bar_command $HOME/.config/polybar/polybar.sh
}


